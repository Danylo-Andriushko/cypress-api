{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-02T18:50:46.033Z",
    "end": "2024-05-02T18:50:48.105Z",
    "duration": 2072,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aa822065-edc7-408a-b1d4-309349db7cae",
      "title": "",
      "fullFile": "cypress\\e2e\\apiTest.cy.js",
      "file": "cypress\\e2e\\apiTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
          "title": "check devices by API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check allowed methods to \"bycat\" endpoint",
              "fullTitle": "check devices by API check allowed methods to \"bycat\" endpoint",
              "timedOut": null,
              "duration": 391,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiController.options(`/bycat`).then(response => {\n  apiController.checkStatusCode(response);\n  const allowedMethods = response.headers.allow;\n  apiController.allowMethod(allowedMethods, apiData.data.bycatAllowMethods);\n});",
              "err": {},
              "uuid": "d5a91097-adec-4a52-9ba7-01a72a23624c",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check allowed methods to \"entries\" endpoint",
              "fullTitle": "check devices by API check allowed methods to \"entries\" endpoint",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiController.options(`/entries`).then(response => {\n  apiController.checkStatusCode(response);\n  const allowedMethods = response.headers.allow;\n  apiController.allowMethod(allowedMethods, apiData.data.entriesAllowMethods);\n});",
              "err": {},
              "uuid": "e078a7b5-7deb-4d89-a02d-7d319b2e74bc",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check allowed methods to \"view\" endpoint",
              "fullTitle": "check devices by API check allowed methods to \"view\" endpoint",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiController.options(`/view`).then(response => {\n  apiController.checkStatusCode(response);\n  const allowedMethods = response.headers.allow;\n  apiController.allowMethod(allowedMethods, apiData.data.viewtAllowMethods);\n});",
              "err": {},
              "uuid": "85299941-6b8b-4c3b-abab-a38626600332",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check phones to exist",
              "fullTitle": "check devices by API check phones to exist",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedPhones = apiData.data.phoneTitles;\napiController.read(`/entries`).then(response => {\n  apiController.checkStatusCode(response);\n  const phones = response.body.Items.filter(item => item.cat === \"phone\");\n  const actualPhones = phones.map(item => item.title);\n  expect(expectedPhones).to.deep.equal(actualPhones);\n});",
              "err": {},
              "uuid": "07b7275d-b2ad-46d8-bd3d-6180667cc782",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check phones quantity",
              "fullTitle": "check devices by API check phones quantity",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiController.read(`/entries`).then(response => {\n  apiController.checkStatusCode(response);\n  const actualPhones = response.body.Items.filter(item => item.cat === \"phone\");\n  expect(actualPhones.length).to.equal(7);\n});",
              "err": {},
              "uuid": "951a4755-1174-4281-a985-1c57068d9ea4",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check phone prices",
              "fullTitle": "check devices by API check phone prices",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const expectedPrices = apiData.data.phonePrices;\napiController.read(`/entries`).then(response => {\n  apiController.checkStatusCode(response);\n  const actualPrices = response.body.Items.map(item => item.price);\n  expect(expectedPrices).to.deep.equal(actualPrices);\n});",
              "err": {},
              "uuid": "c8706cbd-4149-416c-b0f7-cf2276531d12",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check creating of new category",
              "fullTitle": "check devices by API check creating of new category",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const pcValue = 'PC';\napiController.create(`/bycat`, {\n  cat: pcValue\n}).then(response => {\n  apiController.checkStatusCode(response);\n  let arrResponse = response.allRequestResponses;\n  arrResponse.forEach(element => {\n    let responseValue = Object.values(element)[0];\n    expect(responseValue).to.deep.includes('PC');\n  });\n});",
              "err": {},
              "uuid": "dd4b6e9e-8bfc-46b8-ad4a-51bd2a73618d",
              "parentUUID": "3c6b879e-b991-41a7-8393-f628bd1e7b1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5a91097-adec-4a52-9ba7-01a72a23624c",
            "e078a7b5-7deb-4d89-a02d-7d319b2e74bc",
            "85299941-6b8b-4c3b-abab-a38626600332",
            "07b7275d-b2ad-46d8-bd3d-6180667cc782",
            "951a4755-1174-4281-a985-1c57068d9ea4",
            "c8706cbd-4149-416c-b0f7-cf2276531d12",
            "dd4b6e9e-8bfc-46b8-ad4a-51bd2a73618d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1971,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}